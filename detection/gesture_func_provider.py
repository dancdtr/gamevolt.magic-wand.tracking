from collections.abc import Callable
from logging import Logger

from classification.arcs import (
    is_arc_180_ccw_start_e,
    is_arc_180_ccw_start_n,
    is_arc_180_ccw_start_s,
    is_arc_180_ccw_start_w,
    is_arc_180_cw_start_e,
    is_arc_180_cw_start_n,
    is_arc_180_cw_start_s,
    is_arc_180_cw_start_w,
    is_arc_270_ccw_start_e,
    is_arc_270_ccw_start_n,
    is_arc_270_ccw_start_s,
    is_arc_270_ccw_start_w,
    is_arc_270_cw_start_e,
    is_arc_270_cw_start_n,
    is_arc_270_cw_start_s,
    is_arc_270_cw_start_w,
    is_arc_360_ccw_start_e,
    is_arc_360_ccw_start_n,
    is_arc_360_ccw_start_s,
    is_arc_360_ccw_start_w,
    is_arc_360_cw_start_e,
    is_arc_360_cw_start_n,
    is_arc_360_cw_start_s,
    is_arc_360_cw_start_w,
    is_arc_450_ccw_start_e,
    is_arc_450_ccw_start_n,
    is_arc_450_ccw_start_s,
    is_arc_450_ccw_start_w,
    is_arc_450_cw_start_e,
    is_arc_450_cw_start_n,
    is_arc_450_cw_start_s,
    is_arc_450_cw_start_w,
)
from classification.crooks import (
    is_crook_e_ccw,
    is_crook_e_cw,
    is_crook_n_ccw,
    is_crook_n_cw,
    is_crook_s_ccw,
    is_crook_s_cw,
    is_crook_w_ccw,
    is_crook_w_cw,
    is_inverse_crook_e_ccw,
    is_inverse_crook_e_cw,
    is_inverse_crook_n_ccw,
    is_inverse_crook_n_cw,
    is_inverse_crook_s_ccw,
    is_inverse_crook_s_cw,
    is_inverse_crook_w_ccw,
    is_inverse_crook_w_cw,
)
from classification.flicks import (
    is_flick_ccw_ne,
    is_flick_ccw_nw,
    is_flick_ccw_se,
    is_flick_ccw_sw,
    is_flick_cw_ne,
    is_flick_cw_nw,
    is_flick_cw_se,
    is_flick_cw_sw,
)
from classification.gesture_type import GestureType
from classification.hooks import (
    is_hook_e_ccw,
    is_hook_e_cw,
    is_hook_n_ccw,
    is_hook_n_cw,
    is_hook_s_ccw,
    is_hook_s_cw,
    is_hook_w_ccw,
    is_hook_w_cw,
    is_inverse_hook_e_ccw,
    is_inverse_hook_e_cw,
    is_inverse_hook_n_ccw,
    is_inverse_hook_n_cw,
    is_inverse_hook_s_ccw,
    is_inverse_hook_s_cw,
    is_inverse_hook_w_ccw,
    is_inverse_hook_w_cw,
)
from classification.lines import (
    is_line_e,
    is_line_ene,
    is_line_ese,
    is_line_n,
    is_line_ne,
    is_line_nne,
    is_line_nnw,
    is_line_nw,
    is_line_s,
    is_line_se,
    is_line_sse,
    is_line_ssw,
    is_line_sw,
    is_line_w,
    is_line_wnw,
    is_line_wsw,
)
from classification.sines import (
    is_wave_negative_sine_e_360,
    is_wave_negative_sine_e_540,
    is_wave_negative_sine_e_720,
    is_wave_negative_sine_n_360,
    is_wave_negative_sine_n_540,
    is_wave_negative_sine_n_720,
    is_wave_negative_sine_s_360,
    is_wave_negative_sine_s_540,
    is_wave_negative_sine_s_720,
    is_wave_negative_sine_w_360,
    is_wave_negative_sine_w_540,
    is_wave_negative_sine_w_720,
    is_wave_sine_e_360,
    is_wave_sine_e_540,
    is_wave_sine_e_720,
    is_wave_sine_n_360,
    is_wave_sine_n_540,
    is_wave_sine_n_720,
    is_wave_sine_s_360,
    is_wave_sine_s_540,
    is_wave_sine_s_720,
    is_wave_sine_w_360,
    is_wave_sine_w_540,
    is_wave_sine_w_720,
)
from gestures.gesture import Gesture

type GestureIdentifier = Callable[[Gesture], bool]

def no_op(_: Gesture) -> bool:
    return False

class GestureFuncProvider:
    def __init__(self, logger: Logger):
        self._logger = logger

        self._mappings: dict[GestureType, GestureIdentifier] = {
            GestureType.NONE: no_op,
            GestureType.LINE_N: is_line_n,
            GestureType.LINE_E: is_line_e,
            GestureType.LINE_S: is_line_s,
            GestureType.LINE_W: is_line_w,
            GestureType.LINE_NE: is_line_ne,
            GestureType.LINE_SE: is_line_se,
            GestureType.LINE_SW: is_line_sw,
            GestureType.LINE_NW: is_line_nw,
            GestureType.LINE_NNE: is_line_nne,
            GestureType.LINE_ENE: is_line_ene,
            GestureType.LINE_ESE: is_line_ese,
            GestureType.LINE_SSE: is_line_sse,
            GestureType.LINE_SSW: is_line_ssw,
            GestureType.LINE_WSW: is_line_wsw,
            GestureType.LINE_WNW: is_line_wnw,
            GestureType.LINE_NNW: is_line_nnw,
            GestureType.FLICK_CW_NE: is_flick_cw_ne,
            GestureType.FLICK_CW_SE: is_flick_cw_se,
            GestureType.FLICK_CW_SW: is_flick_cw_sw,
            GestureType.FLICK_CW_NW: is_flick_cw_nw,
            GestureType.FLICK_CCW_NE: is_flick_ccw_ne,
            GestureType.FLICK_CCW_SE: is_flick_ccw_se,
            GestureType.FLICK_CCW_SW: is_flick_ccw_sw,
            GestureType.FLICK_CCW_NW: is_flick_ccw_nw,
            GestureType.ARC_360_CW_START_N: is_arc_360_cw_start_n,
            GestureType.ARC_360_CW_START_E: is_arc_360_cw_start_e,
            GestureType.ARC_360_CW_START_S: is_arc_360_cw_start_s,
            GestureType.ARC_360_CW_START_W: is_arc_360_cw_start_w,
            GestureType.ARC_360_CCW_START_N: is_arc_360_ccw_start_n,
            GestureType.ARC_360_CCW_START_E: is_arc_360_ccw_start_e,
            GestureType.ARC_360_CCW_START_S: is_arc_360_ccw_start_s,
            GestureType.ARC_360_CCW_START_W: is_arc_360_ccw_start_w,
            GestureType.ARC_270_CW_START_N: is_arc_270_cw_start_n,
            GestureType.ARC_270_CW_START_E: is_arc_270_cw_start_e,
            GestureType.ARC_270_CW_START_S: is_arc_270_cw_start_s,
            GestureType.ARC_270_CW_START_W: is_arc_270_cw_start_w,
            GestureType.ARC_270_CCW_START_N: is_arc_270_ccw_start_n,
            GestureType.ARC_270_CCW_START_E: is_arc_270_ccw_start_e,
            GestureType.ARC_270_CCW_START_S: is_arc_270_ccw_start_s,
            GestureType.ARC_270_CCW_START_W: is_arc_270_ccw_start_w,
            GestureType.ARC_180_CW_START_N: is_arc_180_cw_start_n,
            GestureType.ARC_180_CW_START_E: is_arc_180_cw_start_e,
            GestureType.ARC_180_CW_START_S: is_arc_180_cw_start_s,
            GestureType.ARC_180_CW_START_W: is_arc_180_cw_start_w,
            GestureType.ARC_180_CCW_START_N: is_arc_180_ccw_start_n,
            GestureType.ARC_180_CCW_START_E: is_arc_180_ccw_start_e,
            GestureType.ARC_180_CCW_START_S: is_arc_180_ccw_start_s,
            GestureType.ARC_180_CCW_START_W: is_arc_180_ccw_start_w,
            GestureType.ARC_450_CW_START_N: is_arc_450_cw_start_n,
            GestureType.ARC_450_CW_START_E: is_arc_450_cw_start_e,
            GestureType.ARC_450_CW_START_S: is_arc_450_cw_start_s,
            GestureType.ARC_450_CW_START_W: is_arc_450_cw_start_w,
            GestureType.ARC_450_CCW_START_N: is_arc_450_ccw_start_n,
            GestureType.ARC_450_CCW_START_E: is_arc_450_ccw_start_e,
            GestureType.ARC_450_CCW_START_S: is_arc_450_ccw_start_s,
            GestureType.ARC_450_CCW_START_W: is_arc_450_ccw_start_w,
            GestureType.INVERSE_CROOK_N_CW: is_inverse_crook_n_cw,
            GestureType.INVERSE_CROOK_E_CW: is_inverse_crook_e_cw,
            GestureType.INVERSE_CROOK_S_CW: is_inverse_crook_s_cw,
            GestureType.INVERSE_CROOK_W_CW: is_inverse_crook_w_cw,
            GestureType.INVERSE_CROOK_N_CCW: is_inverse_crook_n_ccw,
            GestureType.INVERSE_CROOK_E_CCW: is_inverse_crook_e_ccw,
            GestureType.INVERSE_CROOK_S_CCW: is_inverse_crook_s_ccw,
            GestureType.INVERSE_CROOK_W_CCW: is_inverse_crook_w_ccw,
            GestureType.CROOK_N_CW: is_crook_n_cw,
            GestureType.CROOK_E_CW: is_crook_e_cw,
            GestureType.CROOK_S_CW: is_crook_s_cw,
            GestureType.CROOK_W_CW: is_crook_w_cw,
            GestureType.CROOK_N_CCW: is_crook_n_ccw,
            GestureType.CROOK_E_CCW: is_crook_e_ccw,
            GestureType.CROOK_S_CCW: is_crook_s_ccw,
            GestureType.CROOK_W_CCW: is_crook_w_ccw,
            GestureType.HOOK_N_CW: is_hook_n_cw,
            GestureType.HOOK_E_CW: is_hook_e_cw,
            GestureType.HOOK_S_CW: is_hook_s_cw,
            GestureType.HOOK_W_CW: is_hook_w_cw,
            GestureType.HOOK_N_CCW: is_hook_n_ccw,
            GestureType.HOOK_E_CCW: is_hook_e_ccw,
            GestureType.HOOK_S_CCW: is_hook_s_ccw,
            GestureType.HOOK_W_CCW: is_hook_w_ccw,
            GestureType.INVERSE_HOOK_N_CW: is_inverse_hook_n_cw,
            GestureType.INVERSE_HOOK_E_CW: is_inverse_hook_e_cw,
            GestureType.INVERSE_HOOK_S_CW: is_inverse_hook_s_cw,
            GestureType.INVERSE_HOOK_W_CW: is_inverse_hook_w_cw,
            GestureType.INVERSE_HOOK_N_CCW: is_inverse_hook_n_ccw,
            GestureType.INVERSE_HOOK_E_CCW: is_inverse_hook_e_ccw,
            GestureType.INVERSE_HOOK_S_CCW: is_inverse_hook_s_ccw,
            GestureType.INVERSE_HOOK_W_CCW: is_inverse_hook_w_ccw,
            GestureType.WAVE_SINE_360_N: is_wave_sine_n_360,
            GestureType.WAVE_SINE_360_E: is_wave_sine_e_360,
            GestureType.WAVE_SINE_360_S: is_wave_sine_s_360,
            GestureType.WAVE_SINE_360_W: is_wave_sine_w_360,
            GestureType.WAVE_NEGATIVE_SINE_360_N: is_wave_negative_sine_n_360,
            GestureType.WAVE_NEGATIVE_SINE_360_E: is_wave_negative_sine_e_360,
            GestureType.WAVE_NEGATIVE_SINE_360_S: is_wave_negative_sine_s_360,
            GestureType.WAVE_NEGATIVE_SINE_360_W: is_wave_negative_sine_w_360,
            GestureType.WAVE_SINE_540_N: is_wave_sine_n_540,
            GestureType.WAVE_SINE_540_E: is_wave_sine_e_540,
            GestureType.WAVE_SINE_540_S: is_wave_sine_s_540,
            GestureType.WAVE_SINE_540_W: is_wave_sine_w_540,
            GestureType.WAVE_NEGATIVE_SINE_540_N: is_wave_negative_sine_n_540,
            GestureType.WAVE_NEGATIVE_SINE_540_E: is_wave_negative_sine_e_540,
            GestureType.WAVE_NEGATIVE_SINE_540_S: is_wave_negative_sine_s_540,
            GestureType.WAVE_NEGATIVE_SINE_540_W: is_wave_negative_sine_w_540,
            GestureType.WAVE_SINE_720_N: is_wave_sine_n_720,
            GestureType.WAVE_SINE_720_E: is_wave_sine_e_720,
            GestureType.WAVE_SINE_720_S: is_wave_sine_s_720,
            GestureType.WAVE_SINE_720_W: is_wave_sine_w_720,
            GestureType.WAVE_NEGATIVE_SINE_720_N: is_wave_negative_sine_n_720,
            GestureType.WAVE_NEGATIVE_SINE_720_E: is_wave_negative_sine_e_720,
            GestureType.WAVE_NEGATIVE_SINE_720_S: is_wave_negative_sine_s_720,
            GestureType.WAVE_NEGATIVE_SINE_720_W: is_wave_negative_sine_w_720,
        }

    def get(self, gesture_type: GestureType) -> GestureIdentifier:
        func = self._mappings.get(gesture_type)
        
        if func is None:
            raise KeyError(f"Non GestureIdentifier func defined for {gesture_type.name}!")
        else:
            return func
